{"version":3,"sources":["api.ts","components/PeoplePage/PeoplePage.tsx","components/Loader/Loader.tsx","components/PersonInfo/PersonInfo.tsx","App.tsx","index.tsx"],"names":["getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","ErrorType","Loader","className","PersonInfo","person","href","name","sex","born","died","slug","PeoplePage","useState","people","setPeople","isLoading","setIsLoading","errorType","setErrorType","loadPeople","peoplesFromServer","Another","useEffect","map","App","role","to","isActive","classNames","index","element","path","replace","createRoot","document","getElementById","render"],"mappings":"yRASO,SAASA,IAEd,OANYC,EAMA,IALL,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASF,EAAxB,KAMvBI,MAAK,kBAAMC,MATA,oEASN,IACLD,MAAK,SAAAE,GAAQ,OAAIA,EAASC,MAAb,IARlB,IAAcP,CASb,C,UCRIQ,E,OCJQC,EAAS,kBACpB,qBAAKC,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,qBAFG,ECKTC,EAAwB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACtC,OACE,qBAAI,UAAQ,SAAZ,UACE,6BACE,mBAAGC,KAAK,gCAAR,SACGD,EAAOE,SAIZ,6BAAKF,EAAOG,MACZ,6BAAKH,EAAOI,OACZ,6BAAKJ,EAAOK,OACZ,wCACA,0CAXwBL,EAAOM,KAcpC,G,SFjBIV,K,6CAAAA,E,gCAAAA,M,KAKE,IAAMW,EAAiB,WAC5B,MAA4BC,mBAAmB,IAA/C,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAAkCJ,qBAAlC,mBAAOK,EAAP,KAAkBC,EAAlB,KAEMC,EAAU,iDAAG,qGACjBH,GAAa,GADI,kBAIiBzB,IAJjB,OAIT6B,EAJS,OAMfN,EAAUM,GANK,gDAQfF,EAAalB,EAAUqB,SARR,QAWjBL,GAAa,GAXI,yDAAH,qDAkBhB,OAJAM,qBAAU,WACRH,GACD,GAAE,IAGD,qCACE,oBAAIjB,UAAU,QAAd,yBACA,qBAAKA,UAAU,QAAf,SACE,sBAAKA,UAAU,sBAAf,UACGa,GAAa,cAAC,EAAD,IAEd,mBAAG,UAAQ,qBAAqBb,UAAU,kBAA1C,SACGe,KAGDF,GACA,wBACE,UAAQ,cACRb,UAAU,uDAFZ,UAIE,gCACE,+BACE,sCACA,qCACA,sCACA,sCACA,wCACA,6CAIJ,gCACGW,EAAOU,KAAI,SAAAnB,GAAM,OAChB,cAAC,EAAD,CACEA,OAAQA,GACHA,EAAOM,KAHE,gBAajC,EGjEYc,EAAM,kBACjB,sBAAK,UAAQ,MAAb,UACE,qBACE,UAAQ,MACRtB,UAAU,iCACVuB,KAAK,aACL,aAAW,kBAJb,SAME,qBAAKvB,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,IAAD,CACEwB,GAAG,IACHxB,UAAW,gBAAGyB,EAAH,EAAGA,SAAH,OAAkBC,IAC3B,cACA,CACE,8BAA+BD,GAHxB,EAFb,kBAYA,cAAC,IAAD,CACED,GAAG,UACHxB,UAAW,gBAAGyB,EAAH,EAAGA,SAAH,OAAkBC,IAC3B,cACA,CACE,8BAA+BD,GAHxB,EAFb,2BAeN,sBAAMzB,UAAU,UAAhB,SACE,qBAAKA,UAAU,YAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CACE2B,OAAK,EACLC,QAAS,oBAAI5B,UAAU,QAAd,yBAGX,cAAC,IAAD,CACE6B,KAAK,QACLD,QAAS,cAAC,IAAD,CAAUJ,GAAG,IAAIM,SAAO,MAGnC,cAAC,IAAD,CACED,KAAK,SACLD,QAAS,cAAC,EAAD,MAGX,cAAC,IAAD,CACEC,KAAK,IACLD,QAAS,oBAAI5B,UAAU,QAAd,uCAzDF,ECFnB+B,qBAAWC,SAASC,eAAe,SAChCC,OACC,cAAC,IAAD,UACE,cAAC,EAAD,M","file":"static/js/main.1f61b537.chunk.js","sourcesContent":["import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { FC, useEffect, useState } from 'react';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types';\nimport { Loader } from '../Loader';\nimport { PersonInfo } from '../PersonInfo';\n\nenum ErrorType {\n  NoPeople = 'There are no people on the server',\n  Another = 'Something went wrong',\n}\n\nexport const PeoplePage: FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorType, setErrorType] = useState<ErrorType>();\n\n  const loadPeople = async () => {\n    setIsLoading(true);\n\n    try {\n      const peoplesFromServer = await getPeople();\n\n      setPeople(peoplesFromServer);\n    } catch {\n      setErrorType(ErrorType.Another);\n    }\n\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    loadPeople();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n            {errorType}\n          </p>\n\n          {!isLoading && (\n            <table\n              data-cy=\"peopleTable\"\n              className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n            >\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Sex</th>\n                  <th>Born</th>\n                  <th>Died</th>\n                  <th>Mother</th>\n                  <th>Father</th>\n                </tr>\n              </thead>\n\n              <tbody>\n                {people.map(person => (\n                  <PersonInfo\n                    person={person}\n                    key={person.slug}\n                  />\n                ))}\n              </tbody>\n            </table>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { FC } from 'react';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonInfo: FC<Props> = ({ person }) => {\n  return (\n    <tr data-cy=\"person\" key={person.slug}>\n      <td>\n        <a href=\"#/people/jan-van-brussel-1714\">\n          {person.name}\n        </a>\n      </td>\n\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n      <td>Mother</td>\n      <td>Father</td>\n    </tr>\n  );\n};\n","import './App.scss';\nimport classNames from 'classnames';\nimport {\n  Navigate,\n  NavLink,\n  Route,\n  Routes,\n} from 'react-router-dom';\nimport { PeoplePage } from './components/PeoplePage';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            to=\"/\"\n            className={({ isActive }) => classNames(\n              'navbar-item',\n              {\n                'has-background-grey-lighter': isActive,\n              },\n            )}\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            to=\"/people\"\n            className={({ isActive }) => classNames(\n              'navbar-item',\n              {\n                'has-background-grey-lighter': isActive,\n              },\n            )}\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route\n            index\n            element={<h1 className=\"title\">Home Page</h1>}\n          />\n\n          <Route\n            path=\"/home\"\n            element={<Navigate to=\"/\" replace />}\n          />\n\n          <Route\n            path=\"people\"\n            element={<PeoplePage />}\n          />\n\n          <Route\n            path=\"*\"\n            element={<h1 className=\"title\">Page not found</h1>}\n          />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}