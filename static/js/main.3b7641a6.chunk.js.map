{"version":3,"sources":["api.ts","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","components/PeoplePage/PeoplePage.tsx","components/PageNavLink/PageNavLink.tsx","App.tsx","index.tsx"],"names":["getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","className","PersonLink","person","isSelected","slug","name","sex","born","died","fatherName","father","motherName","mother","classNames","to","PeopleTable","people","useParams","map","PeoplePage","useState","setPeople","isLoading","setIsLoading","isError","setIsError","loadPeople","peoplesFromServer","find","parent","useEffect","length","PageNavLink","text","isActive","App","role","index","element","path","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.3b7641a6.chunk.js","sourcesContent":["import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person;\n  isSelected: boolean;\n};\n\nexport const PersonLink: FC<Props> = ({ person, isSelected }) => {\n  const {\n    slug,\n    name,\n    sex,\n    born,\n    died,\n    fatherName,\n    father,\n    motherName,\n    mother,\n  } = person;\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={classNames({\n        'has-background-warning': isSelected,\n      })}\n    >\n      <td>\n        <NavLink\n          to={`/people/${slug}`}\n          className={classNames({\n            'has-text-danger': sex === 'f',\n          })}\n        >\n          {name}\n        </NavLink>\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>\n        {mother\n          ? (\n            <NavLink\n              to={`/people/${mother.slug}`}\n              className=\"has-text-danger\"\n            >\n              {motherName}\n            </NavLink>\n          )\n          : motherName || '-'}\n      </td>\n      <td>\n        {father\n          ? (\n            <NavLink to={`/people/${father.slug}`}>\n              {fatherName}\n            </NavLink>\n          )\n          : fatherName || '-'}\n      </td>\n    </tr>\n  );\n};\n","import { FC } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink';\n\ntype Props = {\n  people: Person[],\n};\n\nexport const PeopleTable: FC<Props> = ({ people }) => {\n  const { slug } = useParams();\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <PersonLink\n            person={person}\n            key={person.slug}\n            isSelected={person.slug === slug}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { FC, useEffect, useState } from 'react';\n\nimport { getPeople } from '../../api';\nimport { Person } from '../../types';\nimport { Loader } from '../Loader';\nimport { PeopleTable } from '../PeopleTable';\n\nexport const PeoplePage: FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  const loadPeople = async () => {\n    setIsLoading(true);\n\n    try {\n      const peoplesFromServer = await getPeople();\n\n      setPeople(peoplesFromServer.map(person => ({\n        ...person,\n        mother: peoplesFromServer.find(\n          parent => person.motherName === parent.name,\n        ),\n        father: peoplesFromServer.find(\n          parent => person.fatherName === parent.name,\n        ),\n      })));\n    } catch {\n      setIsError(true);\n    }\n\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    loadPeople();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          {isError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {!isLoading && !people.length && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {!isLoading && (\n            <PeopleTable people={people} />\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import classNames from 'classnames';\nimport { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\n\ntype Props = {\n  to: string;\n  text: string;\n};\n\nexport const PageNavLink: FC<Props> = ({ to, text }) => (\n  <NavLink\n    to={to}\n    className={({ isActive }) => classNames(\n      'navbar-item',\n      {\n        'has-background-grey-lighter': isActive,\n      },\n    )}\n  >\n    {text}\n  </NavLink>\n);\n","import './App.scss';\nimport {\n  Navigate,\n  Route,\n  Routes,\n} from 'react-router-dom';\nimport { PeoplePage } from './components/PeoplePage';\nimport { PageNavLink } from './components/PageNavLink';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <PageNavLink to=\"/\" text=\"Home\" />\n          <PageNavLink to=\"/people\" text=\"People\" />\n        </div>\n      </div>\n    </nav>\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route\n            index\n            element={<h1 className=\"title\">Home Page</h1>}\n          />\n\n          <Route\n            path=\"/home\"\n            element={<Navigate to=\"/\" replace />}\n          />\n\n          <Route\n            path=\"*\"\n            element={<h1 className=\"title\">Page not found</h1>}\n          />\n\n          <Route path=\"/people\">\n            <Route\n              index\n              element={<PeoplePage />}\n            />\n\n            <Route\n              path=\":slug\"\n              element={<PeoplePage />}\n            />\n          </Route>\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}